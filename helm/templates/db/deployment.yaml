apiVersion: apps/v1
kind: StatefulSet

metadata:
  name: {{ .Release.Name }}-db-mongo
  namespace: {{ .Values.global.namespace | default "default" }}
  labels:
    role: db
    env: {{ .Values.global.namespace | default "default" }}

spec:
  serviceName: {{ .Release.Name }}-db-mongo
  replicas: {{ .Values.db.replicaCount }}
  selector:
    matchLabels:
      role: db
      env: {{ .Values.global.namespace | default "default" }}
  template:
    metadata:
      labels:
        role: db
        env: {{ .Values.global.namespace | default "default" }}

    spec:
      containers:
        - name: mongo
          image: {{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}
          ports:
            - containerPort: {{ .Values.db.service.port }}

          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: MONGO_INITDB_ROOT_PASSWORD

          volumeMounts:
            - name: {{ .Values.db.persistence.name }}-mongo-data
              mountPath: /data/db

          resources:
            limits:
              cpu: {{ .Values.db.resources.limits.cpu | quote }}
              memory: {{ .Values.db.resources.limits.memory | quote }}
            requests:
              cpu: {{ .Values.db.resources.requests.cpu | quote }}
              memory: {{ .Values.db.resources.requests.memory | quote }}

  {{- if .Values.db.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.db.persistence.name }}-mongo-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.db.persistence.size }}
  {{- end }}




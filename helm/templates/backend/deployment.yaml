apiVersion: apps/v1
kind: Deployment

metadata: 
  name: {{ .Release.Name }}-backend
  namespace: {{ .Values.global.namespace | default "default" }}
  labels:
    role: backend
    env: {{ .Values.global.namespace | default "default" }}

spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      role: backend
      env: {{ .Values.global.namespace | default "default" }}
  template:
    metadata:
      labels:
        role: backend
        env: {{ .Values.global.namespace | default "default" }}

    spec:
      containers:
        - name: backend
          image: {{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}
          ports:
            - containerPort: {{ .Values.backend.service.port }}



          env:
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: MONGO_USERNAME
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: MONGO_PASSWORD

            - name: USE_DB_AUTH
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: USE_DB_AUTH
            - name: MONGO_CONN_STR
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: MONGO_CONN_STR
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: PORT_backend


          resources:
            limits:
              cpu: {{ .Values.backend.resources.limits.cpu | quote }}
              memory: {{ .Values.backend.resources.limits.memory | quote }}
            requests:
              cpu: {{ .Values.backend.resources.requests.cpu | quote }}
              memory: {{ .Values.backend.resources.requests.memory | quote }}

          livenessProbe:                           # Health check (restart if dead)
            httpGet:
              path: /ok
              port: {{ .Values.backend.service.port }}

          readinessProbe:                          # Health check (ready if alive)
            httpGet:
              path: /ok
              port: {{ .Values.backend.service.port }}
              


